{"batchcomplete": "", "query": {"pages": {"18935488": {"ns": 0, "pageid": 18935488, "revisions": [{"comment": "/* Reverse engineering of software */", "*": "'''Reverse engineering''' (RE) is the process of taking something (a [[device]], an electrical [[component]], a [[software]] program, etc.) apart and analyzing its workings in detail, usually with the intention to construct a new device or program that does the same thing without actually copying anything from the original.  The [[verb]] form is '''to reverse-engineer''', spelled with a [[hyphen]].\n\nReverse engineering is commonly done to avoid [[copyright]]s on desired functionality, and may be used for avoiding [[patent]] law, though this is a bit risky: patents apply to the functionality, not a specific implementation of it.\n\nReverse engineering is often used by [[military]] in order to copy other nations' [[technology]], parts of which have been obtained by [[intelligence]] operations. It was often used during the [[Second World War]] and the [[Cold War]].\n\nReverse engineering software or hardware systems for the purposes of [[interoperability]], for example in order to support undocumented file formats or hardware peripherals, is mostly believed to be legal, though patent owners often aggressively pursue their patents.\n\nOther purposes of reverse engineering include security auditing, removal of copy protection (\"[[software cracking|cracking]]\"), circumvention of access restrictions often present in [[consumer electronics]], pure curiosity and customization of [[embedded systems]], for example engine management systems.\n\n==Reverse engineering of mechanical components==\n\nMechanical components of mechanical systems, such as motors, or electrical systems, such as plugs, sockets, and edge card connectors can be reproduced by measuring their mechanical characteristics. In RE of mechanical components, the shape of the component under scrutiny must be completely and accurately measured. The forces acting upon it must also be analysed in order to ensure that the new component can withstand the forces that the original withstood. \n\n[[Coordinate-measuring machine]]s (CMM) can be used to create a 3D model of the original component, which can then be used in computer-aided modeling. New and improved techniques in reverse engineering include [[laser scanning]] which uses laser beams to scan across the surface of components of any shape and create a very precise image of the component surface. This scanning creates a series of slices that, when combined, can represent the surface of the object in a computer simulation.\n\n==Reverse engineering of software==\n\nThe term \"reverse engineering\" as applied to software means different things to different people, prompting Chikofsky and Cross {{fn|1}} to write a paper researching the various uses and defining a [[taxonomy]]. From their paper:\n\"Reverse engineering is the process of analyzing a subject system to create representations of the system at a higher level of abstraction.\"\n\nIt can also be seen as \"going backwards through the development cycle\" {{fn|2}}. In this model, the output of the implementation phase (in source code form) is reverse engineered back to the analysis phase, in an inversion of the traditional waterfall model.\n\nReverse engineering is a process of examination only: the software system under consideration is not modified (which would make it [[reengineering]]).\n\nIn practice, two main types of reverse engineering emerge. In the first case, source code is already available for the software, but higher level aspects of the program, perhaps poorly documented or documented but no longer valid, are discovered. In the second case, there is no source code available for the software, and any efforts towards discovering one possible source code for the software are regarded as reverse engineering. This second usage of the term is the one most people are familiar with.\n\n===Reverse engineering of binary software===\nThis process is sometimes termed Reverse Code Engineering or RCE {{fn|3}}. As an example, decompilation of binaries for the [[Java platform]] can be accomplished using [http://www.ARGOuml.org ARGOuml.org]. One famous case of reverse engineering was the first non-[[International Business Machines|IBM]] implementation of [[BIOS]] which launched the historic [[IBM PC compatible|PC clone]] industry.\n\nIn the [[United States]], the [[Digital Millennium Copyright Act]] exempts from the circumvention ban some acts of reverse engineering aimed at interoperability of file formats and protocols ([http://www4.law.cornell.edu/uscode/17/1201.html 17 USC 1201](f)), but judges in key cases have ignored this law, since it is acceptable to circumvent restrictions for use, but not for access.\n\nThe [[Samba software]], which allows systems that are not running [[Microsoft Windows]] systems to share files with systems that are, is a classic example of software reverse engineering, since the Samba project had to reverse-engineer unpublished information about how Windows file sharing worked, so that non-Windows computers could emulate it. The [[WINE]] project does the same thing for the [[Windows API]], and [[OpenOffice.org]] is one party doing this for the [[Microsoft Office]] file formats.\n\nReverse engineering of software can be accomplished by various methods.  The three main groups of reverse engineering are: 1) analysis through observation of information exchange (most prevalent in protocol reverse engineering), 2) [[disassembly]] using a [[disassembler]], and 3) [[decompilation]] using a [[decompiler]].\n\n==Reverse engineering as business research==\n\n'''Reverse engineering''' is also used by businesses to assess competitors' products. It is used to analyze, for instance, how a competitor's product works, what it does, who manufactures it, what components it consists of, estimate costs, identify potential [[patent]] infringement, etc.\n\n'''Value engineering''' is a related activity also used by business. It involves deconstructing and analysing products, but the objective is to find opportunities for cost cutting.\n\n==Similar tasks==\n\n*Research of [[physical law]]s is reverse-engineering the world.\n*[[Black box testing]] in [[software engineering]] has a lot in common with reverse-engineering, the tester usually has the [[API]], but his goals are to find bugs and undocumented features by bashing the product from outside.\n\n==Examples==\n\n* '''[[Jerry can]]'''.  During World War II, British and American forces noticed that the Germans had gasoline cans with an excellent design.   They reverse engineered copies of those cans.  The cans were popularly known as ''Jerry cans''.\n\n* '''The [[Tupolev Tu-4]]'''.  During World War II, a number of American [[B-29 Superfortress|B-29]] bombers on missions over [[Japan]] were forced to land in the [[Soviet Union|USSR]].  The Soviets, who did not have a similar strategic bomber, decided to copy the B-29.  Within a few years they had developed the Tu-4, a near perfect copy.\n\n==See also==\n\n*[[Clean room design]]\n*[[Decompilation]]\n*[[Digital Millennium Copyright Act]]\n*[[Interactive Disassembler]]\n*[[Value engineering]]\n*[[List of production topics]]\n\n==References==\n* {{fnb|1}} E.J. Chikofsky and J.H. Cross II [http://tcse.org/revengr/Chik%20Cross.pdf \"Reverse Engineering and Design Recovery: A Taxonomy\"] in IEEE Software, pp 13-17, IEEE Computer Society, January 1990.\n* {{fnb|2}} R. Warden, \"Re-engineering - a practical methodology with commercial applications\". in Software Reuse amd Reverse Engineering in Practice\", pp 283-305. Chapman & Hall, London, England, 1992.\n* {{fnb|3}} Anton Chuvakin, Cyrus Peikari. [http://www.oreilly.com/catalog/swarrior/reviews.html Security Warrior] ISBN: 0-596-00545-8, O'Reilly 2004. Defines the term \"Reverse Code Engineering\".</div>\n\n==External links==\n* [http://reengineer.org/ Reengineering forum webpage], with links to conferences such as the Working Conference on Reverse Engineering\n* [http://www.program-transformation.org/Transform/ReverseEngineering Program transformation wiki on Reverse Engineering]\n* [http://www.openrce.org/ Open Reverse Code Engineering Community website]\n* [http://www.reteam.org/ Reverse Engineering Team website]\n* [http://www.tikka-d.co.uk/ Reverse engineering code examples]\n* [http://www.conus.info/ Low-level software code analysis]\n* [http://www.bomarc.org Contractable electronics reverse engineering firm.]\n* [http://www.reverse-engineering.net/ Reverse Code Engineering Community]\n* [http://www.crackmes.de/ Crackmes.de Reversers Playground]\n* [http://www.acm.uiuc.edu/sigmil/RevEng/ Introduction to Reverse Engineering Software], preprint of a book by [[Mike Perry]] and [[Nasko Oskov]].\n* [http://www.heaventools.com/PE_Explorer_disassembler.htm Win32 DisAssembler]\n* [http://revenge.berlios.de/ Information for people interested in reverse engineering]\n* [http://archives.cnn.com/2001/US/01/25/smithsonian.cold.war/ CNN: How Soviets copied America's best bomber during WWII]\n* [http://www.globalsecurity.org/wmd/world/russia/tu-4.htm Reverse engineering of Tu-4 on GlobalSecurity.org]\n* [http://reformed-theology.org/html/books/best_enemy/chapter_05.htm AGATHA from APPLE II and other computer r.e.]\n* [http://www.csd.uwo.ca/~pettypi/elevon/baugher_us/b029-29.html Tu-4 Soviet Copy of the B-29]\n* [http://www.abc.net.au/science/k2/moments/s822349.htm Third World Missiles]\n* Article \"[http://www.ercim.org/publication/Ercim_News/enw44/varady.html Reverse Engineering Shapes]\" by [[Tam\u00e1s V\u00e1rady]]\n* Article on [http://www.jenkins-ip.com/serv/serv_6.htm legal considerations] by [[David C. Musker]]\n* [http://whatis.techtarget.com/definition/0,,sid9_gci507015,00.html Whatis.com definition]\n* [http://citeseer.ist.psu.edu/cis?q=reverse+engineering Citations] from CiteSeer\n\n[[Category:Engineering]][[category:Business intelligence]][[category:Production and manufacturing]]\n\n[[de:Reverse Engineering]]\n[[es:Ingenier\u00eda inversa]]\n[[fr:R\u00e9tro-ing\u00e9nierie]]\n[[it:Reverse engineering]]\n[[ms:Kejuruteraan undur]]\n[[nl:Reverse engineering]]\n[[ja:\u30ea\u30d0\u30fc\u30b9\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0]]\n[[pl:Reverse engineering]]\n[[pt:Engenharia reversa]]\n[[ru:\u041e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430]]\n[[fi:Takaisinmallinnus]]\n[[sv:Reverse engineering]]", "timestamp": "2005-10-07T10:23:00Z", "contentformat": "text/x-wiki", "revid": 24965229, "anon": "", "contentmodel": "wikitext", "user": "82.70.90.94", "parentid": 24890540}], "title": "Reverse engineering"}}}}